{"version":3,"sources":["views/CategoryCreate/components/AboutAuthor/AboutAuthor.js","views/CategoryCreate/components/AboutProject/AboutProject.js","views/CategoryCreate/components/Header/Header.js","views/CategoryCreate/components/Preferences/Preferences.js","views/CategoryCreate/CategoryCreate.js","views/CategoryCreate/components/ProjectCover/ProjectCover.js","views/CategoryCreate/components/ProjectDetails/ProjectDetails.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["makeStyles","theme","root","option","border","palette","divider","display","alignItems","padding","spacing","maxWidth","marginTop","selectedOption","backgroundColor","colors","grey","optionRadio","margin","optionDetails","marginLeft","useStyles","alert","marginBottom","formGroup","fieldGroup","fieldHint","tags","flexGrow","dateField","AboutProject","props","className","rest","classes","initialValues","name","tag","startDate","moment","endDate","add","React","useState","selectedDate","setSelectedDate","handleDateChange","date","target","value","values","setValues","calendarTrigger","setCalendarTrigger","handleFieldChange","event","field","persist","calendarOpen","Boolean","calendarMinDate","calendarValue","Card","clsx","CardHeader","title","CardContent","message","TextField","fullWidth","label","onChange","variant","Button","addButton","onClick","newValues","includes","push","size","addIcon","Typography","map","Chip","deleteIcon","key","onDelete","filter","t","handleTagDelete","id","type","InputLabelProps","shrink","inputProps","step","minDate","onAccept","onClose","open","style","Header","component","gutterBottom","options","flexDirection","Preferences","FormControlLabel","control","Checkbox","color","defaultChecked","width","breakpoints","lg","aboutAuthor","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","ref","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","other","_objectWithoutProperties","SwitchBase","_extends","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","text","secondary","colorPrimary","primary","main","alpha","action","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/26.2fb86e8e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Radio,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst AboutAuthor = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState('freelancer');\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  const options = [\n    {\n      value: 'freelancer',\n      title: 'I\\'m a freelancer',\n      description: 'I\\'m looking for teamates to join in a personal project'\n    },\n    {\n      value: 'projectOwner',\n      title: 'I’m a project owner',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    },\n    {\n      value: 'affiliate',\n      title: 'I want to join affiliate',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Who are you exactly?\" />\n      <CardContent>\n        {options.map(option => (\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option.value\n            })}\n            key={option.value}\n          >\n            <Radio\n              checked={selected === option.value}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.title}\n              </Typography>\n              <Typography variant=\"body1\">{option.description}</Typography>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutAuthor;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Chip,\n  Typography\n} from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Alert } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst AboutProject = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n    name: '',\n    tag: '',\n    tags: ['Full-Time', 'ReactJS'],\n    startDate: moment(),\n    endDate: moment().add(1, 'day')\n  };\n  const [selectedDate, setSelectedDate] = React.useState(\"00:00\");\n\n  const handleDateChange = date => {\n    setSelectedDate(date.target.value);\n  };\n  const [values, setValues] = useState({ ...initialValues });\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n\n  const handleCalendarOpen = trigger => {\n    setCalendarTrigger(trigger);\n  };\n\n  const handleCalendarChange = () => {};\n\n  const handleCalendarAccept = date => {\n    setValues(values => ({\n      ...values,\n      [calendarTrigger]: date\n    }));\n  };\n\n  const handleCalendarClose = () => {\n    setCalendarTrigger(false);\n  };\n\n  const calendarOpen = Boolean(calendarTrigger);\n  const calendarMinDate =\n    calendarTrigger === 'startDate'\n      ? moment()\n      : moment(values.startDate).add(1, 'day');\n  const calendarValue = values[calendarTrigger];\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"About this category\" />\n      <CardContent>\n        <form>\n          <Alert\n            className={classes.alert}\n            message=\"Once you choose the Category name you can’t change it unless you contact customer support.\"\n          />\n          <div className={classes.formGroup}>\n            <TextField\n              fullWidth\n              label=\"Category Name\"\n              name=\"name\"\n              onChange={event =>\n                handleFieldChange(event, 'name', event.target.value)\n              }\n              value={values.name}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                className={classes.flexGrow}\n                label=\"Category Tags\"\n                name=\"tag\"\n                onChange={event =>\n                  handleFieldChange(event, 'tag', event.target.value)\n                }\n                value={values.tag}\n                variant=\"outlined\"\n              />\n              <Button\n                className={classes.addButton}\n                onClick={handleTagAdd}\n                size=\"small\">\n                <AddIcon className={classes.addIcon} />\n                Add\n              </Button>\n            </div>\n            <Typography className={classes.fieldHint} variant=\"body2\">\n              Tags will be colored depending the technology if the system\n              recognises.\n            </Typography>\n            <div className={classes.tags}>\n              {values.tags.map(tag => (\n                <Chip\n                  deleteIcon={<CloseIcon />}\n                  key={tag}\n                  label={tag}\n                  onDelete={() => handleTagDelete(tag)}\n                />\n              ))}\n            </div>\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                id=\"time\"\n                label=\"Start Time\"\n                type=\"time\"\n                variant=\"outlined\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                className={classes.dateField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                inputProps={{\n                  step: 300 // 5 min\n                }}\n              />\n              <TextField\n                id=\"time\"\n                label=\"End Time\"\n                type=\"time\"\n                variant=\"outlined\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                className={classes.dateField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                inputProps={{\n                  step: 300 // 5 min\n                }}\n              />\n              {/* <TextField\n                className={classes.dateField}\n                label=\"Start Date\"\n                name=\"startDate\"\n                onClick={() => handleCalendarOpen('startDate')}\n                value={moment(values.startDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              /> */}\n              {/* <TextField\n                className={classes.dateField}\n                label=\"End Date\"\n                name=\"endDate\"\n                onClick={() => handleCalendarOpen('endDate')}\n                value={moment(values.endDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              /> */}\n            </div>\n          </div>\n        </form>\n      </CardContent>\n\n      <DatePicker\n        minDate={calendarMinDate}\n        onAccept={handleCalendarAccept}\n        onChange={handleCalendarChange}\n        onClose={handleCalendarClose}\n        open={calendarOpen}\n        style={{ display: 'none' }} // Temporal fix to hide the input element\n        value={calendarValue}\n        variant=\"dialog\"\n      />\n    </Card>\n  );\n};\n\nAboutProject.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutProject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        New Category\n      </Typography>\n      {/* <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Apply for listing project\n      </Typography> */}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  options: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Preferences = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Preferences\" />\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h6\"\n        >\n          Privacy\n        </Typography>\n        {/* <Typography variant=\"body2\">\n          You will recieve emails in your business email address\n        </Typography> */}\n        <div className={classes.options}>\n          {/* <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Allow teamates invite others\"\n          /> */}\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Private Category\"\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nPreferences.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Preferences;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport {\n  Header,\n  AboutAuthor,\n  AboutProject,\n  Preferences,\n  ProjectCover,\n  ProjectDetails\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3, 3, 6, 3)\n  },\n  aboutAuthor: {\n    marginTop: theme.spacing(3)\n  },\n  aboutProject: {\n    marginTop: theme.spacing(3)\n  },\n  projectCover: {\n    marginTop: theme.spacing(3)\n  },\n  projectDetails: {\n    marginTop: theme.spacing(3)\n  },\n  preferences: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ProjectCreate = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Category Create\"\n    >\n      <Header />\n      <AboutProject className={classes.aboutProject} />\n      <Preferences className={classes.preferences} />\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Create Category\n        </Button>\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectCreate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { FilesDropzone } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectCover = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project cover\" />\n      <CardContent>\n        <FilesDropzone />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCover.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectCover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { RichEditor } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project details\" />\n      <CardContent>\n        <RichEditor placeholder=\"Say something about the product...\" />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectDetails;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}