{"version":3,"sources":["views/menuList/MenuCreate/components/Header/Header.js","views/menuList/MenuCreate/components/General/components/SuccessSnackbar/SuccessSnackbar.js","views/menuList/MenuCreate/components/General/components/GeneralSettings/GeneralSettings.js","views/menuList/MenuCreate/components/General/General.js","views/menuList/MenuCreate/ProjectCreate.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Typography","component","gutterBottom","variant","style","marginBlock","theme","content","backgroundColor","colors","green","message","display","alignItems","icon","marginRight","spacing","SuccessSnackbar","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","defaultProps","saveButton","color","palette","white","GeneralSettings","values","setValues","profile","useState","openSnackbar","setOpenSnackbar","handleChange","event","persist","target","name","type","checked","value","Card","onSubmit","preventDefault","CardHeader","title","Divider","CardContent","Grid","container","item","md","xs","TextField","fullWidth","helperText","label","onChange","required","English_Name","Arabic_Name","CardActions","Button","General","setProfile","useEffect","mounted","axios","get","then","response","data","lg","xl","width","breakpoints","maxWidth","margin","padding","aboutAuthor","marginTop","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate","Category","English_Description","Arabic_Description","English_Note","Arabic_Note","isPublic","canHire","React","ref","action","_props$anchorOrigin","_props$autoHideDurati","children","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","other","_objectWithoutProperties","timerAutoHide","_React$useState","exited","setExited","handleClose","useEventCallback","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","handlePause","handleResume","window","addEventListener","removeEventListener","ClickAwayListener","_extends","onClickAway","concat","capitalize","appear","in","createChainedFunction","timeout","direction","withStyles","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","anchorOriginTopCenter","_defineProperty","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","_props$role","role","Paper","square","elevation","emphasis","emphasize","background","default","typography","body2","getContrastText","flexWrap","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft"],"mappings":"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","file":"static/js/25.b23747d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Typography component=\"h2\" gutterBottom variant=\"overline\"></Typography>\n      <Typography component=\"h1\" style={{ marginBlock: '20PX' }} variant=\"h3\">\n        Create Menu\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst SuccessSnackbar = props => {\n  const { open, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        }\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n};\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nimport SuccessSnackbar from '../SuccessSnackbar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst GeneralSettings = props => {\n  const { values, setValues, profile, className, ...rest } = props;\n\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleChange = event => {\n    event.persist();\n\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  const states = ['Alabama', 'New York', 'San Francisco'];\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"Menu\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={4}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the English name\"\n                label=\"English Name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values?.English_Name}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Arabic Name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values?.Arabic_Name}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\">\n            Create\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar onClose={handleSnackbarClose} open={openSnackbar} />\n    </Card>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { ProfileDetails, GeneralSettings } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProfile = () => {\n      axios.get('/api/account/profile').then(response => {\n        if (mounted) {\n          setProfile(response.data.profile);\n        }\n      });\n    };\n\n    fetchProfile();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}>\n     \n      <Grid item lg={12} md={12} xl={12} xs={12}>\n        <GeneralSettings profile={profile} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { Page } from 'components';\n\nimport { Header, General } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3, 3, 6, 3)\n  },\n  aboutAuthor: {\n    marginTop: theme.spacing(3)\n  },\n  aboutProject: {\n    marginTop: theme.spacing(3)\n  },\n  projectCover: {\n    marginTop: theme.spacing(3)\n  },\n  projectDetails: {\n    marginTop: theme.spacing(3)\n  },\n  preferences: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ProjectCreate = () => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    English_Name: '',\n    Arabic_Name: '',\n    Category: '',\n    English_Description: '',\n    Arabic_Description: '',\n\n    English_Note: '',\n    Arabic_Note: '',\n    isPublic: '',\n    canHire: ''\n  });\n  return (\n    <Page className={classes.root} title=\"Product Createe\">\n      <Header />\n\n      <General/>\n      <div className={classes.actions}></div>\n    </Page>\n  );\n};\n\nexport default ProjectCreate;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);"],"sourceRoot":""}